Sorting are two types based on their techniques:
 i) Iteration based sorting / Basic sorting algorithms
    a) Bubble Sort
    b) Selection Sort
    c) Insertion Sort
    d) Counting Sort(Comparatively Advanced)

 ii) Recursion and Backtracking based sorting / Advanced Sorting algorithms
    a) Quick Sort
    b) Merge Sort

P.S. In this module we'll only know about basic sorting algorithms.

Sorting:- {5, 4, 1, 3, 2} - Unsorted Array
          {1, 2, 3, 4, 5} - Sorted in increasing order
          {5, 4, 3, 2, 1} - Sorted in decreasing order

i.a) Bubble Sort:- In this sorting algorithm large elements come to the end of the array by swapping with the adjacent elements. Here time 
complexity is O(n^2), even in case of an already sorted array. That's why we use swap variable to monitor wheather swapping is happening or not.
By doing this we can keep the time complexity O(n) in bubble sort for an sorted array. This is called optimized bubble sort code for sorted array.

i.b) Selection Sort:- Selection sort is just opposite of bubble sort. Here we pick the smallest elements from the unsorted array and put it at
the beginning. But there is a fundamental diffrence between two sorting techniques. Here we do not compare and swap in every turn. At first we
find the smallest number in the array and swap it to the starting of a array at a time, so that we can stop unnecessary swaps like bubble sorts.
Here the time complexity is O(n) too.

i.c) Insertion Sort:- Pick an element from the unsorted part and place it in the right position in the sorted part. Here the time complexity is
O(n) too.

i.d)Counting Sort:- It is a sorting technique where the range of the elements between the min and max elements is low. Also prefarable where a single 
element is present multiple time inside an array.





